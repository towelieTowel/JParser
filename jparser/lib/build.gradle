/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

// Build version
version = '0.1.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
}

/* ----------------------Custom Tasks-------------------------*/

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

}

task buildDocs(type: Javadoc) {
    source = sourceSets.main.allJava
    destinationDir = file('../docs')
}

/*
*  task cleanup is meant to be run after every build because,
*  library jar builds and other automated output is not necessary 
*  for the build.
*  
*  This task can be safely deleted but will result in a larger build
*/
task cleanup(type: Delete) {
    def generated = file('build/generated')
    def tmp = file('build/tmp')
    def testResults = file('build/test-results')

    doLast {
        println 'Deleting build/generated'
        println 'Deleting build/tmp'
        println 'Deleting build/test-results'
    }

    delete generated
    delete tmp
    delete testResults
}


